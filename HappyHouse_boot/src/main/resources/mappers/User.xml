<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.vue.mapper.UserMapper">
	<insert id="RegisterMember" parameterType="UserInfoDto">
		insert into userinfo (id, pw, email, age, name, grade )
		values (#{id}, #{pw}, #{email}, #{age}, #{name}, 1	)
	</insert>
	<select id="findpw" parameterType="UserInfoDto" resultType="int">
		select count(*)
		from userinfo
		where id = #{id} and email = #{email} and name = #{name}
	</select>
	<update id="setPw" parameterType="UserInfoDto" >
		update userinfo
		set pw = #{pw}
		where id = #{id}
	</update>
	
	<select id="IdCheck" parameterType="String" resultType="int">
		select
		count(id)
		from userinfo
		where id = #{id}
	</select>
	
	<select id="ListAllUser" resultType="UserInfoDto">
		select id, pw, email, age,
		name, date_format(time, '%y.%m.%d') as time, grade
		from userinfo
		order by
		time desc;
	</select>

	<select id="GetUser" parameterType="UserInfoDto"
		resultType="UserInfoDto">
		select id, pw, email, age, name, date_format(time, '%y.%m.%d') as time, grade
		from userinfo
		where id = #{id} and pw = #{pw} and delete_yn = 0
	</select>

	<update id="UpdateUser" parameterType="UserInfoDto" >
		update userinfo
		<trim prefix="set" suffixOverrides=",">
			<if test="pw != null">pw = #{pw},</if>
			<if test="email != null">email = #{email},</if>
			<if test="name != null">name = #{name},</if>
			<if test="age != 0">age = #{age},</if>
			<if test="grade != 0">grade = #{grade}</if>
		</trim>
		where id = #{id}
	</update>
	
	<delete id="DeleteUser" parameterType="String">
		update userinfo
		set delete_yn = 1
		where id = #{id};
	</delete>
</mapper>